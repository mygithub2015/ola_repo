package com.ola.mtracks.controllers;

import java.text.ParseException;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.ola.mtracks.dto.PlaylistDto;
import com.ola.mtracks.models.Playlist;
import com.ola.mtracks.models.Tags;
import com.ola.mtracks.models.User;
import com.ola.mtracks.service.IUserService;

@RestController
@RequestMapping("user")
public class UserController {
	
	@Autowired
	private IUserService userService;
	
	@Autowired
	private ModelMapper modelMapper;
	
	@PostMapping("/add")
	public User addUser(@RequestBody User user) {
		return this.userService.addUser(user);
		
	}
	
	@GetMapping("/find/{userId}")
	public User retreiveUser(@PathVariable Long userId) {
		return this.userService.getUser(userId);
	}
	
	@PutMapping("/update")
	public User updateUser(User user) {
		return this.userService.updateUser(user);
	}
	
	@DeleteMapping("/delete/{userId}")
	public String deleteUser(@PathVariable Long userId) {
		this.userService.deleteUser(userId);
		return "User with id: "+userId+" got deleted successfully!";
	}
	
	private PlaylistDto convertToDto(Playlist playlist) {
		PlaylistDto playlistDto = modelMapper.map(playlist, PlaylistDto.class);
		playlistDto.setTagsId(playlist.getTag().getId());
	    return playlistDto;
	}
	
	private Playlist convertToEntity(PlaylistDto playlistDto) throws ParseException {
		Playlist playlist = modelMapper.map(playlistDto, Playlist.class);
		Tags tags = this.tagsService.getTags(playlistDto.getTagsId());
		playlist.setTag(tags);
	    return playlist;
	}


}
